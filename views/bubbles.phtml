<div class="ecw-mask">

</div>

<div class="ecw-container">
    <div class="ecw-controls">
        <label for="ecw-query-input" class="ecw-control-item">Enter a username or topic:</label>
        <input type="text" name="ecw-query-input" id="ecw-query-input" class="ecw-control-item">
        <button id="ecw-btn-classify" class="ecw-control-item">Classify</button>
    </div>
    <div id="ecw-chart-controls"></div>
    <div id="ecw-canvas"></div>
</div>

<script type="text/javascript">
$(document).ready(function() {
    $("#ecw-btn-classify").click(function(e) {
        var query = $("#ecw-query-input").val();
        if (query == '') {
            alert('You must enter something in the query field.');
            return false;
        }
        var baseUrl = '<?php echo getApiUrl(); ?>';
        var method = 'get';
        var match;
        var payload;
        var endPoint;
        var formData;
        if (null !== (match = query.match(/\@([^.]+)/))) {
            payload = match[1];
            endPoint = 'user';
            formData = {
                screen_name: payload
            };
        } else if (null !== (match = query.match(/https?/))) {
            payload = query;
            endPoint = 'url';
            formData = {
                url: payload
            };
        } else if (null !== (match = query.match(/\s/g))) {
            payload = query;
            endPoint = (match.length > 2)
                ? 'text'
                : 'search';
            if (endPoint == 'text') {
                formData = {
                    text: payload
                };
                method = 'post';
            }
            else {
                formData = {
                    q: payload
                };
            }
        } else {
            payload = query;
            endPoint = 'search';
            formData = {
                q: payload
            };
        }
        $.ajax({
            method: method,
            data: formData,
            url: baseUrl + '/' + endPoint
        })
            .done(function(d) {
                console.log(d);
                buildBubbles(d, '#ecw-canvas');
            })
            .fail(function(e) {
                console.log(e);
            });
    });
});

// runs the visualization
var buildBubbles = function(data, selector)
{
    console.log(EC);
    var bubbles;
    var maxBubbleCount = 40;

    // Handle Events
    EC.Events.subscribe('/Bubbles/render', function() {
        $(".node-text-container").textfill({
            maxFontPixels: 75,
            minFontPixels: 8
        });
    });
    EC.Events.subscribe('/Bubbles/deselectNodes', function() {
        // deselect code goes here
    });

    // initialize the bubble chart
    var bubbles = new EC.Bubbles(selector, data);

    // set the stage width
    var stageWidth = $(selector).width();

    console.log(stageWidth);

    // set up the depth buttons
    $("#ecw-chart-controls").append(insertElement("div", "Tier Depth", "tier-depth chart-control"));
    var depthRadius = 15;
    var buttonSpacing = 5;
    var depthTextTop = 15;
    var depthNames = [
        {indicator: "1", text: "1st"},
        {indicator: "2", text: "2nd"},
        {indicator: "3", text: "3rd"},
        {indicator: "F", text: "Final"}
    ];
    var setDepthText = function(target, i) {
        d3.select(target.parentNode).selectAll(".depth-name-text").remove();
        d3.select(target.parentNode)
            .append("text")
            .attr("class", "depth-name-text")
            //.attr("dominant-baseline", "central")
            .attr("text-anchor", "middle")
            .attr("y", depthRadius * 2 + depthTextTop)
            .attr("x", function() {
                var x = target.getAttribute("x") || target.getAttribute("cx");
                return parseInt(x);
            })
            .text(depthNames[i].text);
    };
    var depthButtons = d3.select("#ecw-controls").select(".tier-depth").append("svg")
        .attr("height", function() { return (depthRadius * 2) + depthTextTop; })
        .style("float", "right")
        .style("margin-left", "10px");
    depthButtons.selectAll("circle")
        .data(depthNames).enter()
        .append("circle")
        .attr("cx", function(d,i) {
            var offset = ((depthRadius * 2) + buttonSpacing) * i;
            var parentWidth = offset + (depthRadius * 2);
            // here we set the svg width and height dynamically
            this.parentNode.setAttribute("width", parentWidth);
            return offset + depthRadius;
        })
        .attr("cy", depthRadius)
        .attr("r", depthRadius)
        .attr("class", function(d,i) {
            if (i == (depthNames.length - 1)) {
                setDepthText(this, i);
                return "selected";
            }
        })
        .on("click", function(d, i) {
            selectDepthButton(this, i + 1);
        });
    depthButtons.selectAll("text.depth-indicator-text")
        .data(depthNames).enter()
        .append("text")
        .attr("class", "depth-indicator-text")
        .attr("dominant-baseline", "central")
        .attr("text-anchor", "middle")
        .attr("y", depthRadius)
        .attr("x", function(d,i) {
            var offset = ((depthRadius * 2) + buttonSpacing) * i;
            return offset + depthRadius;
        })
        .text(function(d) { return d.indicator; })
        .on("click", function(d,i) {
            selectDepthButton(this, i + 1);
        });
    var selectDepthButton = function(target, i) {
        d3.select(".tier-depth").selectAll("circle").classed("selected", false);
        d3.select(".tier-depth").selectAll("circle:nth-child(" + i + ")").classed("selected", true);
        setDepthText(target, i - 1);
        current_chart.setDepth(i);
        EC.Events.publish('/Browser/scrollToChart');
    };
    EC.Events.subscribe('/Bubbles/show', function(d) {
        EC.ChartsList.update("remove");
        EC.ChartsList.register(bubbles);
        current_chart = bubbles;
        $("#bubble_count").val(40);
        bubbles.setLimit(40);
        bubbles.setWidth(stageWidth);
        bubbles.build();
        //EC.Events.publish('/Browser/scrollToChart');
    });
    EC.Events.subscribe('/Viz/finishedLoading', function(d) {
        //
    });
    EC.Events.subscribe('/Browser/scrollToChart', function(d) {
        $("html, body").animate({
            scrollTop: $("#bubbleControls").offset().top
        }, 500);
    });

    // build chart on page load
    EC.Events.publish('/Bubbles/show');
};
</script>